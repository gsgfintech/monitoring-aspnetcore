@using static Capital.GSG.FX.Data.Core.OrderData.OrderStatusCode;

@model StratedgemeMonitor.Models.Orders.OrderModel

@{
    ViewBag.Title = Model.ToString();
}

<div class="row">
    <div class="col-lg-6 col-lg-offset-3">
        <div class="@(Model.Status == Filled ? "panel panel-success" : (Model.Status == Cancelled || Model.Status == ApiCanceled) ? "panel panel-danger" : "panel panel-default")">
            <div class="panel-heading">
                <h2>@Model.ToString() <small>(@Html.DisplayFor(m => m.PermanentId))</small></h2>
            </div>
            <div class="panel-body">
                <dl class="dl-horizontal">
                    <dt>
                        @Html.DisplayNameFor(model => model.Cross)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.Cross)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.FillPrice)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.FillPrice)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.OrderId)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.OrderId)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.Origin)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.Origin)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.PermanentId)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.PermanentId)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.PlacedTime)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.PlacedTime)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.Quantity)
                    </dt>

                    @if (Model.UsdQuantity.HasValue && Model.UsdQuantity.Value / 1000 != Model.Quantity)
                    {
                        <dd>
                            @Html.DisplayFor(model => model.Quantity) <small>(@Html.DisplayFor(m => Model.UsdQuantity) USD)</small>
                        </dd>
                    }
                    else
                    {
                        <dd>
                            @Html.DisplayFor(model => model.Quantity)
                        </dd>
                    }

                    <dt>
                        @Html.DisplayNameFor(model => model.Side)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.Side)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.Status)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.Status)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.Type)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.Type)
                    </dd>
                    <dt>
                        @Html.DisplayNameFor(model => model.Strategy)
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.Strategy)
                    </dd>
                    <dt>
                        @Html.DisplayNameFor(model => model.ClientId)
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.ClientId)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.EstimatedCommission)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.EstimatedCommission) @Html.DisplayFor(model => model.EstimatedCommissionCcy)
                    </dd>
                    <dt>
                        @Html.DisplayNameFor(model => model.LastAsk)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.LastAsk)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.LastBid)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.LastBid)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.LastMid)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.LastMid)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.LastUpdateTime)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.LastUpdateTime)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.LimitPrice)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.LimitPrice)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.OurRef)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.OurRef)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.ParentOrderId)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.ParentOrderId)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.StopPrice)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.StopPrice)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.TimeInForce)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.TimeInForce)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.TrailingAmount)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.TrailingAmount)
                    </dd>
                </dl>
            </div>
            <div class="panel-footer">
                <a class="btn btn-primary" asp-action="Index">Back</a>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-lg-6 col-lg-offset-3">
        <div class="panel panel-default">
            <div class="panel-heading">
                <h4>History</h4>
            </div>
            @if (Model.History.Count > 0)
            {
                <table class="table table-condensed">
                    @foreach (var point in Model.History)
                {
                        <tr>
                            <td>@Html.DisplayFor(p => point.Timestamp)</td>
                            <td>@Html.DisplayFor(p => point.Status)</td>
                        </tr>
                    }
                </table>
            }
            else
            {
                <div class="panel-body">
                    <p>No history point recorder for this order</p>
                </div>
            }
        </div>
    </div>
</div>