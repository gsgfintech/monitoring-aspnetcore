@model StratedgemeMonitor.ViewModels.Executions.ExecutionsListViewModel

    @{
        ViewBag.Title = $"Trades - {Model.Day.ToString("dd MMM")}";
    }

    <div style="overflow: hidden">
        <div class="row">
            <div class="col-lg-6">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <h4 style="display:inline-block">Trades - @Html.DisplayFor(m => Model.Day) <small>(@Model.Trades.Count)</small></h4>
                        <div class="pull-right">
                            <form class="form-horizontal" asp-action="Index">
                                <div class="form-group-sm">
                                    <input asp-for="Day" type="date" />
                                    <button class="btn btn-sm btn-primary hidden-sm hidden-xs" type="submit">Go</button>
                                    <button class="btn btn-xs btn-primary visible-sm visible-xs" type="submit">Go</button>
                                    @if (Model.Trades.Count > 0)
                                    {
                                        <a class="btn btn-default btn-sm hidden-sm hidden-xs" asp-action="ExportExcel">Excel <span class="glyphicon glyphicon-download-alt"></span></a>
                                    }
                                </div>
                            </form>
                        </div>
                    </div>
                    @if (Model.Trades.Count > 0)
            {
                        <table class="table table-hover">
                            <tr>
                                <th class="hidden-sm hidden-xs">@Html.DisplayNameFor(model => Model.Trades.First().ExecutionTime)</th>
                                <th class="visible-sm visible-xs">@Html.DisplayNameFor(model => Model.Trades.First().ExecutionTimeShort)</th>

                                <th>
                                    @Html.DisplayNameFor(model => Model.Trades.First().OrderOrigin)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => Model.Trades.First().Side)
                                </th>

                                <th class="hidden-sm hidden-xs">@Html.DisplayNameFor(model => Model.Trades.First().Quantity)</th>
                                <th class="visible-sm visible-xs">Qty</th>

                                <th>
                                    @Html.DisplayNameFor(model => Model.Trades.First().Cross)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => Model.Trades.First().Price)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => Model.Trades.First().RealizedPnlUsd)
                                </th>
                                <th class="hidden-sm hidden-xs">
                                    @Html.DisplayNameFor(model => Model.Trades.First().TradeDuration)
                                </th>
                                <th></th>
                            </tr>

                            @foreach (var trade in Model.Trades)
                            {
                                <tr>
                                    <td class="hidden-sm hidden-xs">@Html.DisplayFor(modelItem => trade.ExecutionTime)</td>
                                    <td class="visible-sm visible-xs">@Html.DisplayFor(modelItem => trade.ExecutionTimeShort)</td>

                                    <td class="hidden-sm hidden-xs">@Html.DisplayFor(modelItem => trade.OrderOrigin)</td>
                                    <td class="visible-sm visible-xs">@Html.DisplayFor(modelItem => trade.OrderOriginShort)</td>

                                    <td class="hidden-sm hidden-xs">@Html.DisplayFor(modelItem => trade.Side)</td>
                                    <td class="visible-sm visible-xs">@Html.DisplayFor(modelItem => trade.SideShort)</td>

                                    <td>@Html.DisplayFor(modelItem => trade.Quantity)</td>

                                    <td class="hidden-sm hidden-xs">@Html.DisplayFor(modelItem => trade.Cross)</td>
                                    <td class="visible-sm visible-xs">@Html.DisplayFor(modelItem => trade.CrossShort)</td>

                                    <td>@Html.DisplayFor(modelItem => trade.Price)</td>

                                    <td class="@(trade.RealizedPnlUsd > 0 ? "bg-success" : trade.RealizedPnlUsd < 0 ? "bg-danger" : "")">@Html.DisplayFor(modelItem => trade.RealizedPnlUsd)</td>

                                    <td class="hidden-sm hidden-xs">@Html.DisplayFor(modelItem => trade.TradeDuration)</td>

                                    <td><a class="btn btn-xs btn-primary" asp-action="Details" asp-route-executionid="@trade.Id"><span class="glyphicon glyphicon-plus"></span></a></td>
                                </tr>
                            }

                        </table>
                    }
                    else
                    {
                        <div class="panel-body">
                            <p>No trade for the specified day</p>
                        </div>
                    }
                </div>
            </div>
            <div class="col-lg-6 hidden-sm hidden-xs">
                @*<div class="panel panel-default">
                        <div class="panel-heading">
                            <h2>Cumulative PnL <small>(Gross)</small></h2>
                        </div>
                        <div class="panel-body">
                            @if (Model.Trades.Count > 0)
                            {
                                <ej-chart id="pnlChart" series="@Model.PnlChartData" primary-x-axis="@Model.PnlChartXAxis" primary-y-axis="@Model.PnlChartYAxis"></ej-chart>
                            }
                            else
                            {
                                <p>Nothing to display</p>
                            }
                        </div>
                    </div>*@
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <h4>Current Pnl <small>(Total)</small></h4>
                    </div>
                    <div class="panel-body" style="padding:0;">
                        <iframe style="width:100%; padding:0; margin:0" src="@(Model.GrafanaEndpoint)/dashboard-solo/db/@(Model.PnlDashboard)?refresh=30s&orgId=1&panelId=1&from=@(Model.GraphStartTimeUnixTicks)&theme=light" height="600" frameborder="0"></iframe>
                    </div>
                </div>
            </div>
        </div>
    </div>