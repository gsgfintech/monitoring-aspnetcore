@using static Capital.GSG.FX.Data.Core.OrderData.OrderStatusCode;

@model StratedgemeMonitor.AspNetCore.ViewModels.OrdersListViewModel

@{
    ViewBag.Title = $"Orders - {Model.Day.ToString("dd MMM")}";
}

<div class="row">
    <div class="col-lg-12">
        <div class="panel panel-default">
            <div class="panel-heading">
                <h2>Active Orders <small>(@Model.ActiveOrders.Count)</small></h2>
            </div>
            @if (Model.ActiveOrders.Count > 0)
            {
                <table class="table table-hover">
                    <tr>
                        <th>
                            @Html.DisplayNameFor(m => Model.ActiveOrders.First().PermanentId)
                        </th>
                        <th>
                            @Html.DisplayNameFor(m => Model.ActiveOrders.First().OrderId)
                        </th>
                        <th>
                            @Html.DisplayNameFor(m => Model.ActiveOrders.First().PlacedTime)
                        </th>
                        <th>
                            @Html.DisplayNameFor(m => Model.ActiveOrders.First().LastUpdateTime)
                        </th>
                        <th>
                            @Html.DisplayNameFor(m => Model.ActiveOrders.First().Strategy)
                        </th>
                        <th>
                            @Html.DisplayNameFor(m => Model.ActiveOrders.First().Status)
                        </th>
                        <th>
                            @Html.DisplayNameFor(m => Model.ActiveOrders.First().Type)
                        </th>
                        <th>
                            @Html.DisplayNameFor(m => Model.ActiveOrders.First().Side)
                        </th>
                        <th>
                            @Html.DisplayNameFor(m => Model.ActiveOrders.First().Quantity)
                        </th>
                        <th>
                            @Html.DisplayNameFor(m => Model.ActiveOrders.First().Cross)
                        </th>
                        <th>
                            @Html.DisplayNameFor(m => Model.ActiveOrders.First().FillPrice)
                        </th>
                        <th>
                            @Html.DisplayNameFor(m => Model.ActiveOrders.First().LimitPrice)
                        </th>
                        <th>
                            @Html.DisplayNameFor(m => Model.ActiveOrders.First().StopPrice)
                        </th>
                        <th>
                            @Html.DisplayNameFor(m => Model.ActiveOrders.First().TrailingAmount)
                        </th>
                        <th>
                            @Html.DisplayNameFor(m => Model.ActiveOrders.First().LastBid)
                        </th>
                        <th>
                            @Html.DisplayNameFor(m => Model.ActiveOrders.First().LastAsk)
                        </th>
                        <th>
                            @Html.DisplayNameFor(m => Model.ActiveOrders.First().Slippage)
                        </th>
                        <th>
                            @Html.DisplayNameFor(m => Model.ActiveOrders.First().TimeInForce)
                        </th>
                        <th></th>
                    </tr>

                    @foreach (var item in Model.ActiveOrders)
                {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.PermanentId)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.OrderId)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.PlacedTime)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.LastUpdateTime)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Strategy)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Status)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Type)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Side)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Quantity)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Cross)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.FillPrice)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.LimitPrice)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.StopPrice)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.TrailingAmount)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.LastBid)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.LastAsk)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Slippage)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.TimeInForce)
                            </td>
                            <td>
                                <a class="btn btn-xs btn-primary" asp-action="Details" asp-route-id="@item.PermanentId"><span class="glyphicon glyphicon-plus"></span></a>
                            </td>
                        </tr>
                    }

                </table>
            }
            else
            {
                <div class="panel-body">
                    <p>No active order</p>
                </div>
            }
        </div>
    </div>
</div>
<div class="row">
    <div class="col-lg-12">
        <div class="panel panel-default">
            <div class="panel-heading">
                <h2 style="display:inline-block">Inactive Orders - @Html.DisplayFor(m => Model.Day) <small>(@Model.InactiveOrders.Count)</small></h2>
                <div class="pull-right">
                    <form class="form-horizontal" asp-action="Index">
                        <div class="form-group-sm">
                            <input asp-for="Day" type="date" />
                            <button type="submit">Go</button>
                        </div>
                    </form>
                </div>
            </div>
            @if (Model.InactiveOrders.Count > 0)
            {
                <table class="table table-hover">
                    <tr>
                        <th>
                            @Html.DisplayNameFor(m => Model.InactiveOrders.First().PermanentId)
                        </th>
                        <th>
                            @Html.DisplayNameFor(m => Model.InactiveOrders.First().OrderId)
                        </th>
                        <th>
                            @Html.DisplayNameFor(m => Model.InactiveOrders.First().PlacedTime)
                        </th>
                        <th>
                            @Html.DisplayNameFor(m => Model.InactiveOrders.First().LastUpdateTime)
                        </th>
                        <th>
                            @Html.DisplayNameFor(m => Model.InactiveOrders.First().Strategy)
                        </th>
                        <th>
                            @Html.DisplayNameFor(m => Model.InactiveOrders.First().Status)
                        </th>
                        <th>
                            @Html.DisplayNameFor(m => Model.InactiveOrders.First().Type)
                        </th>
                        <th>
                            @Html.DisplayNameFor(m => Model.InactiveOrders.First().Side)
                        </th>
                        <th>
                            @Html.DisplayNameFor(m => Model.InactiveOrders.First().Quantity)
                        </th>
                        <th>
                            @Html.DisplayNameFor(m => Model.InactiveOrders.First().Cross)
                        </th>
                        <th>
                            @Html.DisplayNameFor(m => Model.InactiveOrders.First().FillPrice)
                        </th>
                        <th>
                            @Html.DisplayNameFor(m => Model.InactiveOrders.First().LimitPrice)
                        </th>
                        <th>
                            @Html.DisplayNameFor(m => Model.InactiveOrders.First().StopPrice)
                        </th>
                        <th>
                            @Html.DisplayNameFor(m => Model.InactiveOrders.First().TrailingAmount)
                        </th>
                        <th>
                            @Html.DisplayNameFor(m => Model.InactiveOrders.First().LastBid)
                        </th>
                        <th>
                            @Html.DisplayNameFor(m => Model.InactiveOrders.First().LastAsk)
                        </th>
                        <th>
                            @Html.DisplayNameFor(m => Model.InactiveOrders.First().Slippage)
                        </th>
                        <th>
                            @Html.DisplayNameFor(m => Model.InactiveOrders.First().TimeInForce)
                        </th>
                        <th></th>
                    </tr>

                    @foreach (var item in Model.InactiveOrders)
                {
                        <tr class="@(item.Status == Filled ? "bg-success" : (item.Status == Cancelled || item.Status == ApiCanceled) ? "bg-danger" : "")">
                            <td>
                                @Html.DisplayFor(modelItem => item.PermanentId)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.OrderId)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.PlacedTime)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.LastUpdateTime)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Strategy)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Status)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Type)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Side)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Quantity)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Cross)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.FillPrice)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.LimitPrice)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.StopPrice)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.TrailingAmount)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.LastBid)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.LastAsk)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Slippage)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.TimeInForce)
                            </td>
                            <td>
                                <a class="btn btn-xs btn-primary" asp-action="Details" asp-route-id="@item.PermanentId"><span class="glyphicon glyphicon-plus"></span></a>
                            </td>
                        </tr>
                    }

                </table>
            }
            else
            {
                <div class="panel-body">
                    <p>No inactive order</p>
                </div>
            }
        </div>
    </div>
</div>